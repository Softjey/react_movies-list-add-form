{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","utils/isUrl.ts","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","isUrl","str","test","TextField","name","value","label","placeholder","required","url","onChange","id","useState","Math","random","toFixed","slice","errorMessage","setErrorMessage","htmlFor","type","classNames","event","inputValue","target","errorMessageText","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","canSubmit","onSubmit","preventDefault","prev","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c015bfa5.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","function isUrl(str: string) {\n  // eslint-disable-next-line\n  const urlPattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return urlPattern.test(str);\n}\n\nexport default isUrl;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport isUrl from '../../utils/isUrl';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  url?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  url = false,\n  onChange = () => { },\n}) => {\n  // generage a unique id once on component load\n  const { 0: id } = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  // const [touched, setTouched] = useState(false);\n\n  const { 0: errorMessage, 1: setErrorMessage } = useState('');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value;\n    let errorMessageText = '';\n\n    if (required && !inputValue) {\n      errorMessageText = (`${label} is required`);\n    } else if (url && !isUrl(inputValue)) {\n      errorMessageText = ('This is not a url');\n    }\n\n    setErrorMessage(errorMessageText);\n    onChange(inputValue);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': errorMessage,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={handleChange}\n          // onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {errorMessage && (\n        <p className=\"help is-danger\">{errorMessage}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onAdd: (movie: Movie) => void,\n\n}\n\nexport const NewMovie: React.FC<Props> = ({\n  onAdd,\n}) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const { 0: count, 1: setCount } = useState(0);\n\n  const { 0: title, 1: setTitle } = useState('');\n  const { 0: description, 1: setDescription } = useState('');\n  const { 0: imgUrl, 1: setImgUrl } = useState('');\n  const { 0: imdbUrl, 1: setImdbUrl } = useState('');\n  const { 0: imdbId, 1: setImdbId } = useState('');\n\n  const canSubmit = title && imgUrl && imdbUrl && imdbId;\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    resetForm();\n\n    setCount(prev => prev + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleFormSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        url\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        url\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!canSubmit}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const { 0: movies, 1: setMovies } = useState(moviesFromServer);\n\n  const addMovieToList = (movie: Movie) => {\n    setMovies(prev => [...prev, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovieToList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}